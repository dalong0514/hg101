<?php/** * Created by PhpStorm. * User: dingo * Date: 13/04/2019 * Time: 02:23 */namespace App\Models;use Encore\Admin\Grid\Filter\Like;use Illuminate\Database\Eloquent\Model;use Illuminate\Database\Eloquent\SoftDeletes;use Qiniu\Http\Request;use function Qiniu\json_decode;class ProductModel extends Model{    use SoftDeletes;    protected $table = "tz_product";    public $primaryKey = 'id';    protected $dates = ['deleted_at'];    public $timestamps = true;    public static $is_hot = [0 => '否', 1 => '是'];  // 是否推荐    const HOT = 1; // 推荐    const NOT_HOT = 0; // 普通    // 产品类型    public static $_type = [        1 => '输送泵',        2 => '离心机',        3 => '压滤机',        4 => '蒸发器',        5 => '萃取机',        6 => '干燥器',        7 => '换热器',    ];    // 产品标签    public static $_label = [        1 => '提取',        2 => '发酵',        3 => '合成',    ];    private static $_field = ['id', 'name', 'describe', 'company', 'images', 'cover_image', 'type_id', 'label_id', 'detail', 'information', 'like_count', 'collect_count'];    const SHOW = 1;    const HIDDEN = 0;    const PAGE_SIZE = 10;    /**     * 保存图片处理     */    public function setImagesAttribute($image)    {        if (is_array($image)) {            $this->attributes['images'] = json_encode($image);        }    }    /**     * 读取图片处理     */    public function getImagesAttribute($image)    {        return json_decode($image, true) ?? [];    }    /**     * 标签字段修改     */    public function setLabelIdAttribute($label_id)    {        if(is_array($label_id)){            $this->attributes['label_id'] = implode(',', $label_id);        }    }    /**     * 处理文本     */    public function getDetailAttribute($value)    {        $url = explode('/', \Request::getRequestUri());        if($url[1] != 'admin'){;            return str_replace("/storage/", env('APP_URL') . "/storage/", $value);        }        return $value;    }    /**     * 处理文本     */    public function getInformationAttribute($value)    {        $url = explode('/', \Request::getRequestUri());        if($url[1] != 'admin'){            return str_replace("/storage/", env('APP_URL') . "/storage/", $value);        }        return $value;    }    protected static function boot()    {        parent::boot();        static::deleting(function($product) {            LikeModel::deletedpro($product->id, 1);        });    }//    /**//     *//     *///    public function getLabelIdAttribute($label_id){//        $label_id = explode(',', $label_id);//        $label_name = [];//        foreach ($label_id as $value) {//            $label_arr = LabelModel::_label();//            $label_name[$value] = $label_arr[$value] ?? '';//        }////        return $label_name;//    }//    /**//     * 设置产品参数//     *///    public function setDetailAttribute($detail)//    {//        if($detail){//            $this->attributes['detail'] = json_encode($detail);//        }//    }////    /**//     * 获取产品参数//     *///    public function getDetailAttribute($detail)//    {//        if ($detail){//            return json_decode($detail, true);//        }//        return $detail;//    }    /**     * 修改时间是时间戳格式     */    public function fromDateTime($value){        return strtotime(parent::fromDateTime($value));    }    /**     * 获取产品     *     * @return array     */    public static function list($user_id){        return self::deal(self::query()            ->where('status', self::SHOW)            ->orderByDesc('wight')            ->orderByDesc('collect_count')            ->orderByDesc('id')            ->limit(self::PAGE_SIZE)            ->select(self::$_field)            ->get()->toArray(), $user_id);    }    /**     * 获取推荐产品     *     * @param string     * @return array     */    public static function hotList($user_id){        return self::deal(self::query()            ->where('status', self::SHOW)            ->where('is_hot', self::HOT)            ->orderByDesc('wight')            ->orderByDesc('collect_count')            ->orderByDesc('id')//            ->limit(self::PAGE_SIZE)            ->select(self::$_field)            ->get()->toArray(), $user_id);    }    /**     * 产品搜索     *     * @param string keyword     * @return array     */    public static function search($keyword, $user_id){        return self::deal(self::query()            ->where('status', self::SHOW)            ->where('detail', 'like', '%' . $keyword . '%')            ->orderByDesc('id')            ->orderByDesc('wight')            ->limit(self::PAGE_SIZE)            ->select(self::$_field)            ->get()->toArray(), $user_id);    }    /**     * 筛选     *     * @param int type_id     * @param array label_id     * @return array     */    public static function screen($type_id, $label_id, $user_id){        $query = self::query();        if($type_id) {            $query = $query->where('type_id', $type_id);        }        if($label_id){            $query = $query->where('label_id', $label_id);        }        $res = $query->orderByDesc('wight')->orderByDesc('id')->select(self::$_field)->get();        if($res) {            $res = $res->toArray();        }else{            $res = [];        }        return self::deal($res, $user_id);    }    /**     * 详情     */    public static function detailOne($id, $keyword = ''){        $data = self::query()->find($id);        if($data) {            $data = $data->toArray();        }else{            return [];        }        $label = LabelModel::_label();        $type = TypeModel::_type();        // 标签        if(isset($data['label_id']) && $data['label_id']) {            $label_ids = explode(',', $data['label_id']);            foreach ($label_ids as $label_id){                $data['label'][$label_id] = $label[$label_id] ?? '';            }        }        // 类型        if(isset($data['type_id'])) {            $data['type'] = $type[$data['type_id']] ?? '';        }        // img 地址        if(isset($data['images']) && $data['images']) {            foreach ($data['images'] as &$image){                $image = env('QN_URL') . $image;            }        }        // 封面图地址        if(isset($data['cover_image']) && $data['cover_image']) {            $data['cover_image'] = env('QN_URL') . $data['cover_image'];        }        // 关键字标记        if(isset($data['detail']) && $data['detail'] && $keyword){            $data['detail'] = str_replace($keyword, '<i style="color:#dc3c38;">' . $keyword . '</i>', $data['detail']);        }        return $data;    }    /**     * 字段处理     */    private static function deal($data, $user_id){        if(!$data) return [];        $label = LabelModel::_label();        $type = TypeModel::_type();        foreach ($data as &$value){            // 标签            if(isset($value['label_id']) && $value['label_id']) {                $label_ids = explode(',', $value['label_id']);                foreach ($label_ids as $label_id){                    $value['label'][$label_id] = $label[$label_id] ?? '';                }            }            // 类型            if(isset($value['type_id'])) {                $value['type'] = $type[$value['type_id']] ?? '';            }            // 当前用户是否点赞            $value['is_like'] = LikeModel::checkOpera($user_id, LikeModel::PRODUCT, $value['id'], LikeModel::LIKE);            // 当前用户是否收藏            $value['is_collect'] = LikeModel::checkOpera($user_id, LikeModel::PRODUCT, $value['id'], LikeModel::COLLECT);            // img 地址            if(isset($value['images']) && $value['images']) {                foreach ($value['images'] as &$image){                    $image = env('QN_URL') . $image;                }            }            // 封面图地址            if(isset($value['cover_image']) && $value['cover_image']) {                $value['cover_image'] = env('QN_URL') . $value['cover_image'];            }        }        return $data;    }}